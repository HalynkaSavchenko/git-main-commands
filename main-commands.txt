git --version (git -v) встановлена версія git
git config --global user.name "Your Name" - Встановлює ім'я користувача
git config --global user.email "Your email" - Встановлює електронну пошту
git config --list - Виводить список налаштувань (q - вихід зі списку налаштувань)
git help <verb> або git <verb> --help - Отримання довідки про конкретну команду <verb> в терміналі або браузері залежно від налаштувань (q - вихід)
ssh-keygen -t rsa -b 4096 -C "your_email@example.com" - Створить новий SSH-ключ замість your_email@example.com треба вказати емейл, під яким зареєстрований акаунт на GitHub
eval "$(ssh-agent -s)" - Запускає ssh-agent у фоновому режимі
ssh-add ~/.ssh/id_rsa - Додає SSH-ключ до ssh-agent (~/.ssh/id_rsa - шлях до SSH-ключа)
cat ~/.ssh/id_rsa.pub - Щоб побачити чи доданий SSH-ключ

git clone <repo-url> <local-name> - Клонування віддаленого репозиторію за url адресою (<local-name> локальне ім'я віддаленого репозиторію)
code . - відкрити поточний в терміналі проєкт у Visual Studio Code (VSCode)
code ~/шлях/до/твоєї/директорії - Відкрити проєкт за повним шляхом до нього

git init - Створить локальний git-репозиторій з поточної директорії
git remote add origin <SSH-URL або URL> - Прив'язати поточний в терміналі локальний репозиторій до віддаленого репозиторію з <SSH-URL або URL> адресою
git remote -v - перевірити, до якого віддаленого репозиторію прив'язаний поточний в терміналі локальний репозиторій
git remote set-url origin <SSH-URL або URL> - Переприв'язка поточного локального репозиторію до віддаленого репозиторію

git status - дозволяє побачити поточний стан репозиторію, вона вказує, які файли та папки були змінені, які готові до коміту (індексовані) або ще ні (неіндексовані) та які не відстежуються системою Git
git add - додавання змін до наступного коміту:
    git add . - Додавання всіх змін у поточній папці
    git add drafts - Додавання всіх файлів у певній папці (шлях до папки drafts)
    git add plans.txt - Додавання певного файлу (plans.txt)
    git add *.txt - Додавання файлів із певним розширенням (наприклад, усі файли проєкту з розширенням .txt)
    git add -A (або git add --all) - Додавання усіх нових та змінених файлів і прибирання з відстеження видалених на весь репозиторій з будь-якого місця в ньому

git rm --cached <file> - зміни файлу <file> ніколи не потраплятимуть до комітів і вилучити його з індексу назавжди
git reset <file> - зберегти зміни у файлі <file> локально і просто вилучити його з поточного індексу, щоб він не потрапив до наступного коміту
git reset - скинути стан індексу для всіх файлів до останнього коміту і скасувати всі зміни, які були додані до індексу (staging area)
    git reset --hard - скине індекс і робочий каталог до стану останнього коміту, видаляючи всі незбережені зміни


Основні команди для навігації та управління файлами і папками

cd (change directory): змінює поточну робочу директорію.
cd <шлях до папки>
cd C:\Users\galas\OneDrive\Документы

dir: виводить список файлів і папок у поточній директорії.

mkdir (make directory): створює нову папку.
mkdir <назва папки>
mkdir new_folder

rmdir (remove directory): видаляє порожню папку.
rmdir <назва папки>
rmdir old_folder

del (delete): видаляє один або кілька файлів.
del <назва файлу>
del file.txt

move: переміщує файл або папку до нового місця.
move <що переміщається> <куди переміщається>
move file.txt C:\Users\galas\OneDrive\Документы\new_folder

copy: копіює файл або папку до нового місця.
copy <що копіюється> <куди копіюється>
copy file.txt C:\Users\galas\OneDrive\Документы\new_folder

ren (rename): перейменовує файл або папку.
ren <старе ім'я> <нове ім'я>
ren old_name.txt new_name.txt

Інформаційні команди

echo: виводить текст або значення змінної.
echo <текст>
echo Hello, world!

type: виводить вміст текстового файлу.
type <назва файлу>
type file.txt

find: шукає текст у файлах.
find "<текст>" <назва файлу>
find "example" file.txt

Системні команди

cls: очищає екран командного рядка.

exit: закриває командний рядок.

chkdsk (check disk): перевіряє диск на наявність помилок і відображає звіт.

ipconfig: відображає налаштування IP мережі.

tasklist: відображає список запущених процесів.

taskkill: зупиняє запущений процес.
taskkill /IM <ім'я процесу>
taskkill /IM notepad.exe

Команди для роботи з дисками

diskpart: запускає утиліту управління дисками.

format: форматує диск або розділ.
format <літера диска>:
format D:


Налаштування Git

    git config: Налаштування параметрів Git.
    git config --global user.name "Ваше ім'я"
    git config --global user.email "ваш.email@example.com"

Ініціалізація репозиторію

    git init: Створення нового локального репозиторію.
    git init

Клонування репозиторію

    git clone: Клонування існуючого репозиторію.
    git clone <URL репозиторію>

Основні операції з файлами

git add: Додавання файлів до індексу (стейджинг).
git add <файл>
git add .

git commit: Фіксація змін в локальний репозиторій.
git commit -m "Опис змін"

git status: Перевірка статусу репозиторію.

git diff: Показати зміни у файлах, які ще не були закомічені.


Робота з гілками

git branch: Управління гілками.

Створити нову гілку:
git branch <назва гілки>

git checkout: Переключення між гілками або комітами.

Переключитися на існуючу гілку:
git checkout <назва гілки>

Створити нову гілку і переключитися на неї:
git checkout -b <назва гілки>

git merge: Злиття гілок.
git merge <назва гілки>

git rebase: Переміщення або об'єднання серії комітів.
git rebase <гілка>

Відправка та отримання змін

git remote: Управління віддаленими репозиторіями.

Показати віддалені репозиторії:
git remote -v

Додати віддалений репозиторій:
git remote add origin <URL репозиторію>

git push: Відправка змін до віддаленого репозиторію.
git push origin <назва гілки>

git pull: Отримання змін з віддаленого репозиторію і злиття їх з локальною гілкою.

git fetch: Отримання змін з віддаленого репозиторію без злиття їх з локальною гілкою.

Відкати та зміни

git reset: Відкат змін.

Відкат індексованих змін:
git reset <файл>

Відкат комітів:
git reset --hard <хеш коміта>

git revert: Створення нового коміта, який відміняє зміни попереднього коміта.
git revert <хеш коміта>

Перегляд історії
git log: Перегляд історії комітів.

git show: Показати інформацію про конкретний коміт.
git show <хеш коміта>

Інші корисні команди

git stash: Тимчасове збереження змін без коміта.

Зберегти зміни:
git stash

Повернути зміни:
git stash pop

git tag: Управління тегами.
Створити тег:
git tag <назва тега>
    
